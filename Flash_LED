;*----------------------------------------------------------------------------
;* Purpose: This code flashes one LED at approximately 1 Hz frequency
;*----------------------------------------------------------------------------*/
	THUMB		; Declare THUMB instruction set 
	AREA		My_code, CODE, READONLY 	; 
	EXPORT		__MAIN 		; Label __MAIN is used externally q
	ENTRY 
__MAIN
; The following operations are done in this
; way to practice different memory addressing methods. 

; MOV moves into the lower word (16 bits) and clears the upper word
; MOVT moves into the upper word
; show several ways to create an address using a fixed offset and register as offset
;   and several examples are used below
; NOTE MOV can move ANY 16-bit, and only SOME >16-bit, constants into a register
; BNE and BEQ can be used to branch on the last operation being Not Equal or EQual to zero
;
	MOV 		R2, #0xC000		; move 0xC000 into R2
	MOV 		R4, #0x0		; init R4 register to 0 to build address
	MOVT 		R4, #0x2009		; assign 0x20090000 into R4
	ADD 		R4, R4, R2 		; add 0xC000 to R4 to get 0x2009C000 


	MOV 		R3, #0x0000007C	; move initial value for port P2 into R3
	STR 		R3, [R4, #0x40] 	; Turn off five LEDs on port 2 
                            ; thi is pre-indexed mode: #0x40 is offset; EA = [R4] + offset  then R3 is wrriten to this Effective Address
	MOV 		R3, #0xB0000000	; move initial value for port P1 into R3
	STR 		R3, [R4, #0x20]	; Turn off three LEDs on Port 1 using an offset
                            ; thi is pre-indexed mode: #0x20 is offset; EA = [R4] + offset  then R3 is wrriten to this Effective Address

    MOV 		R2, #0x20		; put Port 1 offset into R2
    MOV 		R0, #0xFFFF 		; Initialize R0 lower word for countdown

		

abc


   
	SUBS 		R0, #1 	          ; Decrement r0 and set N,Z,V,C status bits
	BNE         abc               ;  "Not Equal to Zero Loop", go to the next line if R0 is Zero
	EOR 		R3, #0x10000000   ; assign value 0xA0000000/0xB0000000 consecutively to R3   
	STR 		R3, [R4, R2]      ; Toggling bit 28 of the address, [R4, R2] or 0x2009C020, with R3
	MOVT        R0, #0x0009       ; Initialize R0 to upper word 0x0007 for another count down
	B 			abc		;         back to loop

 	END 

